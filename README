This repo contains a couple of useful scripts and is also where we should create deployment migrations, which have now replaced the launch steps page.


dumpref
=======

This dumps reference data out from an instance in a format that can be imported into other instances.  The import should always work as long as the schema is the same, regardless of what data is currently in the instance it's going into.  See -h for options.

This effectively means we can take the reference data from any instance, rip it out and throw it into another instance very quickly.


deploy
======

This will "deploy" a release to an instance of openeyes.  It does the following:

 - Resets the database (optional)
 - Ensures all repos are checked out on the target branch and git pulls (optional)
 - Imports the sample data (optional)
 - Runs all the migrations
 - Can import additional sql dumps
 - Can import from preconfigured urls

We are now dumping the reference data from nearlive on openeyes3 once a day onto the preview server so that it can be easily consumed by the deploy script.  So if you create $HOME/.deploy.conf and put this in it:
all:http://admin:openeyesdevel@data.dev.openeyes.org.uk/data/ref_all.sql.gz
all-users:http://admin:openeyesdevel@data.dev.openeyes.org.uk/data/ref_all_users.sql.gz

You should now be able to do:

deploy -rsm /var/www/glaucoma21 feature/glaucoma-2.1

This will:

1. Reset the database of the target instance
2. Import the sample data
3. Run the migrations
4. Run the deployment scripts for glaucoma-2.1 (see below)
5. Imports the MEH reference data snapshot so the instance has all the same reference data as live

Deployment scripts
==================

From now on instead of having launch steps in confluence we're going to write them all as migrations.

When making changes to the deployment scripts you should always add new migrations rather than modifying existing ones, as this way we can always run the migrations against any instance without having to first rebuild the database.

Generally we will have a branch for each release that matches the release branch, and once the release goes out the deployment branch will become redundant.

If you put the deploy repo into your instance, then cd to it:

cd modules/deploy

you can create migrations from here which are completely separate from the main application migrations (separate directory contained within the deploy repo, and a separate migration timeline).  So for glaucoma-2.1 you should check out feature/glaucoma-2.1 on the deploy repo and create the migrations there for any launch steps that need to happen.  I've added a few in already from the confluence launch steps page and will be adding the rest from there shortly, but if you need to add any new ones please create them as migrations in deploy on feature/glaucoma-2.1.

These deployment scripts will then be run automatically when the "deploy" script is executed.
